name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.11"]
      fail-fast: false # Continue testing other Python versions even if one fails

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Format check with black
        run: |
          black --check .

      - name: Test with pytest
        run: |
          pytest --cov=app --cov-report=xml
        continue-on-error: false # Explicitly fail on test failures

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false # Don't fail CI if Codecov upload fails

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  && success()

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build application
        run: |
          echo "Building Flask application..."
          python -m py_compile app.py
          echo "Build successful!"

      - name: Test application startup
        run: |
          python app.py &
          sleep 5
          curl -f http://localhost:5000/health || exit 1
          pkill -f python
